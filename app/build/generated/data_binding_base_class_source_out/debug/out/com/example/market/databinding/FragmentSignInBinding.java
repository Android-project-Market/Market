// Generated by view binder compiler. Do not edit!
package com.example.market.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.market.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSignInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView login;

  @NonNull
  public final Button signIn;

  @NonNull
  public final EditText signInId;

  @NonNull
  public final EditText signInPassword;

  @NonNull
  public final TextView signinTextView;

  @NonNull
  public final TextInputLayout textInputLayoutID;

  @NonNull
  public final TextInputLayout textInputLayoutPW;

  private FragmentSignInBinding(@NonNull ConstraintLayout rootView, @NonNull TextView login,
      @NonNull Button signIn, @NonNull EditText signInId, @NonNull EditText signInPassword,
      @NonNull TextView signinTextView, @NonNull TextInputLayout textInputLayoutID,
      @NonNull TextInputLayout textInputLayoutPW) {
    this.rootView = rootView;
    this.login = login;
    this.signIn = signIn;
    this.signInId = signInId;
    this.signInPassword = signInPassword;
    this.signinTextView = signinTextView;
    this.textInputLayoutID = textInputLayoutID;
    this.textInputLayoutPW = textInputLayoutPW;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSignInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login;
      TextView login = ViewBindings.findChildViewById(rootView, id);
      if (login == null) {
        break missingId;
      }

      id = R.id.sign_in;
      Button signIn = ViewBindings.findChildViewById(rootView, id);
      if (signIn == null) {
        break missingId;
      }

      id = R.id.sign_in_id;
      EditText signInId = ViewBindings.findChildViewById(rootView, id);
      if (signInId == null) {
        break missingId;
      }

      id = R.id.sign_in_password;
      EditText signInPassword = ViewBindings.findChildViewById(rootView, id);
      if (signInPassword == null) {
        break missingId;
      }

      id = R.id.signin_textView;
      TextView signinTextView = ViewBindings.findChildViewById(rootView, id);
      if (signinTextView == null) {
        break missingId;
      }

      id = R.id.textInputLayout_ID;
      TextInputLayout textInputLayoutID = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutID == null) {
        break missingId;
      }

      id = R.id.textInputLayout_PW;
      TextInputLayout textInputLayoutPW = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutPW == null) {
        break missingId;
      }

      return new FragmentSignInBinding((ConstraintLayout) rootView, login, signIn, signInId,
          signInPassword, signinTextView, textInputLayoutID, textInputLayoutPW);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
